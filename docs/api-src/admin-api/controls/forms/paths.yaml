/v1/controls/forms:
  get:
    summary: Метод получения списка форм
    description: Метод предназначен для получения списка всех форм, сохраненных в БД
    operationId: getForms
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
      - $ref: "#/components/parameters/Custom.Request.Query.Filter.ElementDetailing"
      - $ref: "#/components/parameters/App.Request.Query.Filter.Statuses"
      - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
      - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
      - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
      - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

    responses:
      "200":
        description: Получен список форм
        content:
          application/json;charset=UTF-8:
            schema:
                $ref: "#/components/schemas/Controls.Forms.AdminAPI.Response.Model.FormList"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  post:
    summary: Метод добавления новой формы
    description: |-
      Метод предназначен для создания информации о новой форме в БД

      **Ограничения и ошибки полей:**
    operationId: createForm
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/Controls.Forms.AdminAPI.Request.Model.CreateForm"

    responses:
      "201":
        description: Информация о форме успешно добавлена
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/App.Response.Model.SuccessCreatedItem"
      "400":
        # Название переменной записи не может быть пустым
        # Указанное название записи уже существует
        # Название переменной записи не может быть более 32 символов
        # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
        # Заголовок записи не может быть пустым
        # Заголовок записи не может быть более 128 символов
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

/v1/controls/forms/{formId}:
  get:
    summary: Метод получения формы
    description: Метод предназначен для получения формы из БД
    operationId: getForm
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Controls.Forms.AdminAPI.Request.Path.FormID"

    responses:
      "200":
        description: Получена информация о форме
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.Forms.AdminAPI.Response.Model.Form"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  put:
    summary: Метод сохранения формы
    description: |-
      Метод предназначен для сохранения информации о форме в БД

      **Ограничения и ошибки полей:**
    operationId: storeForm
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Controls.Forms.AdminAPI.Request.Path.FormID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/Controls.Forms.AdminAPI.Request.Model.StoreForm"

    responses:
      "204":
        description: Информация о форме успешно сохранена
      "400":
        # Название переменной записи не может быть пустым
        # Указанное название записи уже существует
        # Название переменной записи не может быть более 32 символов
        # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
        # Заголовок записи не может быть пустым
        # Заголовок записи не может быть более 128 символов
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  delete:
    summary: Метод удаления формы
    description: Метод предназначен для удаления информации о форме из БД
    operationId: removeForm
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Controls.Forms.AdminAPI.Request.Path.FormID"

    responses:
      "204":
        description: Информация о форме успешно удалена
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

/v1/controls/forms/{formId}/status:
  put:
    summary: Метод изменения статуса формы
    description: |-
      Метод предназначен для изменения статуса формы в БД

      **Ограничения и ошибки полей:**
      - version: required,gte=1 | ErrVersionInvalid
      - status: required,enum | ErrSwitchStatusRejected
    operationId: changeFormStatus
    tags:
      - Controls.Forms

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Controls.Forms.AdminAPI.Request.Path.FormID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Request.Model.ChangeStatus"

    responses:
      "204":
        description: Статус формы успешно изменён
      "400":
        # Указанный статус содержит недопустимое значение
        # В данный статус переключение невозможно
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"