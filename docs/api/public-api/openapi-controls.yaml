---
openapi: 3.0.3
info:
  version: v0.2.1
  title: Public API получения файлов по URL
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Andrey Nazarov
  description: |-
    Public REST API проекта print-shop получения файлов по URL

    ### Пользовательские ограничения полей и ошибки

    #### Ограничения полей
    - required - поле обязательно для заполнения;
    - omitempty - поле может быть не указано (не будет использоваться методом, в который было передано);
    - unique - уникальное значение поля;
    - min=N - поле должно быть не менее N символов;
    - max=N - поле должно быть не более N символов;
    - gte=N - числовое поле должно быть равно или более N;
    - lte=N - числовое поле должно быть равно или менее N;
    - enum - поле должно содержать одно из ENUM значений;
    - UUID - поле формата UUID;
    - pattern=P - поле должно соответствовать регулярному выражению P;

    #### Ошибки
    - ErrVersionInvalid - если передаваемая версия объекта не совпала с текущей версией объекта.\
      Как правило, это означает, что объект был ранее изменён другим процессом;
    - ErrSwitchStatusRejected - перевод в указанный статус объекта отклонён.\
      WorkFlow объекта запрещает переключение в указанный статус;
servers:
  - url: http://localhost:8080
    description: Local Host
tags:
  - name: Controls.SubmitForm
    description: Public API Controls submit forms

paths:
  /v1/controls/submit-forms:
    get:
      summary: Метод получения списка форм
      description: |-
        Метод предназначен для получения списка всех форм, сохраненных в БД

        Фильтр `App.Request.Query.Filter.SearchText` использует для поиска следующие поля:
        - caption;

        Возможные значения `App.Request.Query.ListSorter.SortField`:
        - caption,default,asc;
        - createdAt;
        - updatedAt;

        Возможные значения `App.Request.Query.ListPager.PageSize`:
        - от 1 до 1000 (default: 50)

      operationId: getSubmitFormList
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
        - $ref: "#/components/parameters/App.Request.Query.Filter.Statuses"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

      responses:
        "200":
          description: Получен список форм
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: "#/components/schemas/Controls.SubmitForms.PublicAPI.Response.Model.FormList"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-forms/{paramName}:
    get:
      summary: Метод получения формы
      description: Метод предназначен для получения формы из БД
      operationId: getSubmitForm
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForms.PublicAPI.Request.Path.FormParamName"

      responses:
        "200":
          description: Получена информация о форме
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Controls.SubmitForms.PublicAPI.Response.Model.CompiledForm"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

components:

  parameters:
    App.Request.Header.AcceptLanguage:
      description: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language
      name: Accept-Language
      in: header
      required: false
      schema:
        type: string
        default: "ru-RU"
      example: "ru;q=0.9, fr-CH, fr;q=0.8, en;q=0.7, *;q=0.5"

    App.Request.Header.CorrelationID:
      description: Уникальный идентификатор клиента
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
      example: "1f0b7925-cee6-4e44-8ea3-4e585d12212d"

    App.Request.Query.Filter.SearchText:
      description: Поисковая строка
      name: query
      in: query
      required: false
      schema:
        type: string
        maxLength: 128
      example: "перфокарта"

    App.Request.Query.Filter.Statuses:
      description: Список статусов через "," (см. App.Enum.Status)
      name: statuses
      in: query
      required: false
      schema:
        type: string
        default: "ENABLED"
      example: "DRAFT,ENABLED"

    App.Request.Query.ListPager.PageIndex:
      description: Индекс страницы списка с записями
      name: pageIndex
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1024
        default: 0
      example: 2

    App.Request.Query.ListPager.PageSize:
      description: Количество записей на страницу списка
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1024
        default: 50
      example: 70

    App.Request.Query.ListSorter.SortField:
      description: Название колонки, по которой происходит сортировка
      name: sortField
      in: query
      required: false
      schema:
        type: string
      example: "caption"

    App.Request.Query.ListSorter.SortDirection:
      description: Направление сортировки
      name: sortDirection
      in: query
      required: false
      schema:
        description: |-
          Направление сортировки:
          - ASC - по возрастанию;
          - DESC - по убыванию;
        type: string
        enum:
          - ASC
          - DESC
        default: "ASC"
      example: "DESC"

    Custom.Request.Query.Filter.ElementDetailing:
      description: Список типов детализации через "," (см. Custom.Enum.FormElementDetailing)
      name: detailing
      in: query
      required: false
      schema:
        type: string
        default: "NORMAL"
      example: "NORMAL,EXTENDED"

    Controls.SubmitForms.PublicAPI.Request.Path.FormParamName:
      description: Идентификатор формы
      name: paramName
      in: path
      required: true
      schema:
        type: string
      example: "form-name"

  schemas:
    App.Field.Caption:
      description: Название записи
      type: string
      maxLength: 128
      example: "Название"

    App.Field.DateTimeCreatedAt:
      description: Дата и время создания записи (UTC)
      type: string
      format: date-time
      example: "2023-01-01T12:00:00.000+02:00"

    App.Field.DateTimeUpdatedAt:
      description: Дата и время обновления записи (UTC)
      type: string
      format: date-time
      example: "2023-01-01T12:00:00.000+02:00"

    App.Field.Int32:
      description: Целое 32-ти разрядное число
      type: integer
      format: int32
      example: 2147483647

    App.Field.ListPager.Total:
      description: Количество записей в БД с учётом указанных в запросе фильтров
      type: integer
      minimum: 0
      example: 584

    App.Field.RewriteName:
      description: |
        Человеко понятный URL
        - pattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
      type: string
      # pattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
      minLength: 4
      maxLength: 32
      example: "rewrite-name"

    App.Response.Model.ErrorList:
      description: DTO списка пользовательских ошибок 400
      type: array
      items:
        $ref: "#/components/schemas/App.Response.Model.ErrorAttribute"

    App.Response.Model.ErrorAttribute:
      description: DTO пользовательской ошибки 400
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым | Указано недопустимое значение атрибута"

    App.Response.Model.ErrorDetails: # RFC 7807 (Problem Details for HTTP APIs)
      description: DTO следующих ошибок - 401, 403, 404, 5XX
      type: object
      required:
        - title
        - details
        - request
        - time
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Resource not found"
        details:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Resource [User] with id = [123456] not found. You MUST use PUT to add a resource instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд (UTC)
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    App.Response.Model.JsonFile:
      description: Файл типа - JSON
      type: string
      maxLength: 1048576 # 1Mb

    Custom.Enum.FormElementDetailing:
      description: |-
        Детализация данных формы/элемента формы:
        - NORMAL - пользовательская;
        - EXTENDED - расширенная (для менеджера, технолога);
      type: string
      enum:
        - NORMAL
        - EXTENDED
      example: "NORMAL"

    Custom.Field.Controls.FormID:
      description: Идентификатор формы (модуль - Controls.SubmitForm)
      type: string
      format: uuid
      example: "1be2be72-2cac-45d3-8dda-2476fcc600f0"

    Controls.SubmitForms.PublicAPI.Response.Model.CompiledForm:
      description: |-
        DTO - собранная форма пользовательского интерфейса
      type: object
      required:
        - id
        - paramName
        - caption
      properties:
        id: # formId
          $ref: "#/components/schemas/Custom.Field.Controls.FormID"
        paramName:
          $ref: "#/components/schemas/App.Field.VariableCamelCase"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Листовая продукция"

  responses:
    App.ResponseJson.Error400:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorList"

    App.ResponseJson.Error404:
      description: Запрашиваемый ресурс не был найден
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error5XX:
      description: Внутренняя ошибка сервера
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error401:
      description: Пользователь не был аутентифицирован
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error403:
      description: Пользователю с текущими правами доступ отклонён
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

  securitySchemes:
    bearerAuth:
      description: https://www.rfc-editor.org/rfc/rfc6750
      type: http
      scheme: bearer
      bearerFormat: JWT