---
openapi: 3.0.3
info:
  version: 0.12.0
  title: Private API print-shop управления пользовательскими интерфейсами
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Andrey Nazarov
  description: |-
    Private REST API проекта print-shop

    ### Пользовательские ограничения полей и ошибки

    #### Ограничения полей
    - required - поле обязательно для заполнения;
    - omitempty - поле может быть не указано (не будет использоваться методом, в который было передано);
    - unique - уникальное значение поля;
    - min=N - поле должно быть не менее N символов;
    - max=N - поле должно быть не более N символов;
    - gte=N - числовое поле должно быть равно или более N;
    - lte=N - числовое поле должно быть равно или менее N;
    - enum - поле должно содержать одно из ENUM значений;
    - UUID - поле формата UUID;
    - pattern=P - поле должно соответствовать регулярному выражению P;

    #### Ошибки
    - ErrVersionInvalid - если передаваемая версия объекта не совпала с текущей версией объекта.\
      Как правило, это означает, что объект был ранее изменён другим процессом;
    - ErrSwitchStatusRejected - перевод в указанный статус объекта отклонён.\
      WorkFlow объекта запрещает переключение в указанный статус;
servers:
  - url: http://localhost:8080/adm
    description: Local Host
tags:
  - name: Controls.ElementTemplate
    description: Private API Control element templates

  - name: Controls.SubmitForm
    description: Private API Control submit forms

paths:
  /v1/controls/element-templates:
    get:
      summary: Метод получения списка шаблонов элементов формы
      description: |-
        Метод предназначен для получения списка всех шаблонов элементов формы, сохраненных в БД

        Фильтр `App.Request.Query.Filter.SearchText` использует для поиска следующие поля:
        - caption;

        Возможные значения `App.Request.Query.ListSorter.SortField`:
        - caption,default,asc;
        - createdAt;
        - updatedAt;

        Возможные значения `App.Request.Query.ListPager.PageSize`:
        - от 1 до 1000 (default: 50)

      operationId: getElementTemplateList
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
        - $ref: "#/components/parameters/Custom.Request.Query.Filter.ElementDetailing"
        - $ref: "#/components/parameters/App.Request.Query.Filter.Statuses"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

      responses:
        "200":
          description: Получен список шаблонов элементов формы
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: "#/components/schemas/Controls.ElementTemplate.AdminAPI.Response.Model.ElementTemplateList"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    post:
      summary: Метод добавления нового шаблона элемента формы
      description: |-
        Метод предназначен для создания информации о новом шаблоне элемента формы в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: createElementTemplate
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.ElementTemplate.AdminAPI.Request.Model.CreateElementTemplate"

      responses:
        "201":
          description: Информация о шаблоне элемента формы успешно добавлена
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.Response.Model.SuccessCreatedItem"
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          # Тип поля формы содержит недопустимое значение
          # Содержание шаблона поля формы не может быть пустым
          # Содержание шаблона поля формы не может быть более 65536 символов
          # Содержание шаблона поля формы некорректно
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/element-templates/{templateId}:
    get:
      summary: Метод получения шаблона элемента формы по его идентификатору
      description: Метод предназначен для получения информации о шаблоне элемента формы из БД
      operationId: getElementTemplate
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.ElementTemplate.AdminAPI.Request.Path.TemplateID"

      responses:
        "200":
          description: Получена информация о шаблоне элемента формы
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Controls.ElementTemplate.AdminAPI.Response.Model.ElementTemplate"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    put:
      summary: Метод сохранения шаблона элемента формы
      description: |-
        Метод предназначен для сохранения информации о шаблоне элемента формы в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: storeElementTemplate
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.ElementTemplate.AdminAPI.Request.Path.TemplateID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.ElementTemplate.AdminAPI.Request.Model.StoreElementTemplate"

      responses:
        "204":
          description: Информация о шаблоне элемента формы успешно сохранена
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          # Тип поля формы содержит недопустимое значение
          # Содержание шаблона поля формы не может быть пустым
          # Содержание шаблона поля формы не может быть более 65536 символов
          # Содержание шаблона поля формы некорректно
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    delete:
      summary: Метод удаления шаблона элемента формы
      description: Метод предназначен для удаления информации о шаблоне элемента формы из БД
      operationId: removeElementTemplate
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.ElementTemplate.AdminAPI.Request.Path.TemplateID"

      responses:
        "204":
          description: Информация о шаблоне элемента формы успешно удалена
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/element-templates/{templateId}/status:
    put:
      summary: Метод изменения статуса шаблона элемента формы
      description: |-
        Метод предназначен для изменения статуса шаблона элемента формы в БД

        **Ограничения и ошибки полей:**
        - version: required,gte=1 | ErrVersionInvalid
        - status: required,enum | ErrSwitchStatusRejected

      operationId: changeElementTemplatestatus
      tags:
        - Controls.ElementTemplate

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.ElementTemplate.AdminAPI.Request.Path.TemplateID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/App.Request.Model.ChangeStatus"

      responses:
        "204":
          description: Статус шаблона элемента формы успешно изменён
        "400":
          # Указанный статус содержит недопустимое значение
          # В данный статус переключение невозможно
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-forms:
    get:
      summary: Метод получения списка форм
      description: |-
        Метод предназначен для получения списка всех форм, сохраненных в БД

        Фильтр `App.Request.Query.Filter.SearchText` использует для поиска следующие поля:
        - caption;

        Возможные значения `App.Request.Query.ListSorter.SortField`:
        - caption,default,asc;
        - createdAt;
        - updatedAt;

        Возможные значения `App.Request.Query.ListPager.PageSize`:
        - от 1 до 1000 (default: 50)

      operationId: getSubmitFormList
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
        - $ref: "#/components/parameters/Custom.Request.Query.Filter.ElementDetailing"
        - $ref: "#/components/parameters/App.Request.Query.Filter.Statuses"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

      responses:
        "200":
          description: Получен список форм
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: "#/components/schemas/Controls.SubmitForms.AdminAPI.Response.Model.FormList"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    post:
      summary: Метод добавления новой формы
      description: |-
        Метод предназначен для создания информации о новой форме в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: createSubmitForm
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.SubmitForms.AdminAPI.Request.Model.CreateForm"

      responses:
        "201":
          description: Информация о форме успешно добавлена
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.Response.Model.SuccessCreatedItem"
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-forms/{formId}:
    get:
      summary: Метод получения формы
      description: Метод предназначен для получения формы из БД
      operationId: getSubmitForm
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForms.AdminAPI.Request.Path.FormID"

      responses:
        "200":
          description: Получена информация о форме
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Controls.SubmitForms.AdminAPI.Response.Model.Form"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    put:
      summary: Метод сохранения формы
      description: |-
        Метод предназначен для сохранения информации о форме в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: storeSubmitForm
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForms.AdminAPI.Request.Path.FormID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.SubmitForms.AdminAPI.Request.Model.StoreForm"

      responses:
        "204":
          description: Информация о форме успешно сохранена
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    delete:
      summary: Метод удаления формы
      description: Метод предназначен для удаления информации о форме из БД
      operationId: removeSubmitForm
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForms.AdminAPI.Request.Path.FormID"

      responses:
        "204":
          description: Информация о форме успешно удалена
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-forms/{formId}/status:
    put:
      summary: Метод изменения статуса формы
      description: |-
        Метод предназначен для изменения статуса формы в БД

        **Ограничения и ошибки полей:**
        - version: required,gte=1 | ErrVersionInvalid
        - status: required,enum | ErrSwitchStatusRejected

      operationId: changeSubmitFormStatus
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForms.AdminAPI.Request.Path.FormID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/App.Request.Model.ChangeStatus"

      responses:
        "204":
          description: Статус формы успешно изменён
        "400":
          # Указанный статус содержит недопустимое значение
          # В данный статус переключение невозможно
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-form-elements:
    get:
      summary: Метод получения списка элементов формы
      description: |-
        Метод предназначен для получения списка всех элементов формы, сохраненных в БД

        Фильтр `App.Request.Query.Filter.SearchText` использует для поиска следующие поля:
        - caption;

        Возможные значения `App.Request.Query.ListSorter.SortField`:
        - caption,default,asc;
        - createdAt;
        - updatedAt;

        Возможные значения `App.Request.Query.ListPager.PageSize`:
        - от 1 до 1000 (default: 50)

      operationId: getSubmitFormElementList
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForm.AdminAPI.Request.Query.FormID"

      responses:
        "200":
          description: Получен список элементов формы
          content:
            application/json;charset=UTF-8:
              schema:
                  $ref: "#/components/schemas/Controls.SubmitForm.AdminAPI.Response.Model.FormElementList"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    post:
      summary: Метод добавления нового элемента формы
      description: |-
        Метод предназначен для создания информации о новом элементе формы в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: createSubmitFormElement
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.SubmitForm.AdminAPI.Request.Model.CreateFormElement"

      responses:
        "201":
          description: Информация об элементе формы успешно добавлена
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.Response.Model.SuccessCreatedItem"
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-form-elements/{elementId}:
    get:
      summary: Метод получения элемента формы по его идентификатору
      description: Метод предназначен для получения информации об элементе формы из БД
      operationId: getSubmitFormElement
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForm.AdminAPI.Request.Path.ElementID"

      responses:
        "200":
          description: Получена информация об элементе формы
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Controls.SubmitForm.AdminAPI.Response.Model.FormElement"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    put:
      summary: Метод сохранения элемента формы
      description: |-
        Метод предназначен для сохранения информации об элементе формы в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: storeSubmitFormElement
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForm.AdminAPI.Request.Path.ElementID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Controls.SubmitForm.AdminAPI.Request.Model.StoreFormElement"

      responses:
        "204":
          description: Информация об элементе формы успешно сохранена
        "400":
          # Название переменной записи не может быть пустым
          # Указанное название записи уже существует
          # Название переменной записи не может быть более 32 символов
          # Название переменной записи должны соответствовать следующему шаблону "[a-zA-Z][a-zA-Z0-9]+"
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    delete:
      summary: Метод удаления элемента формы
      description: Метод предназначен для удаления информации об элементе формы из БД
      operationId: removeSubmitFormElement
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForm.AdminAPI.Request.Path.ElementID"

      responses:
        "204":
          description: Информация об элементе формы успешно удалена
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/controls/submit-form-elements/{elementId}/move:
    patch:
      summary: Метод перемещения элемента формы
      description: Метод предназначен для изменения позиции элемента формы в списке элементов в БД
      operationId: moveSubmitFormElement
      tags:
        - Controls.SubmitForm

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Controls.SubmitForm.AdminAPI.Request.Path.ElementID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/App.Request.Model.MoveItem"

      responses:
        "204":
          description: Элемент формы был успешно перемещён
        "400":
          # Поле, после которого необходимо вставить указанное поле не найдено
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

components:

  parameters:
    App.Request.Header.AcceptLanguage:
      description: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language
      name: Accept-Language
      in: header
      required: false
      schema:
        type: string
        default: "ru-RU"
      example: "ru;q=0.9, fr-CH, fr;q=0.8, en;q=0.7, *;q=0.5"

    App.Request.Header.CorrelationID:
      description: Уникальный идентификатор клиента
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
      example: "1f0b7925-cee6-4e44-8ea3-4e585d12212d"

    App.Request.Query.Filter.SearchText:
      description: Поисковая строка
      name: query
      in: query
      required: false
      schema:
        type: string
        maxLength: 128
      example: "перфокарта"

    App.Request.Query.Filter.Statuses:
      description: Список статусов через "," (см. App.Enum.Status)
      name: statuses
      in: query
      required: false
      schema:
        type: string
        default: "ENABLED"
      example: "DRAFT,ENABLED"

    App.Request.Query.ListPager.PageIndex:
      description: Индекс страницы списка с записями
      name: pageIndex
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1024
        default: 0
      example: 2

    App.Request.Query.ListPager.PageSize:
      description: Количество записей на страницу списка
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1024
        default: 50
      example: 70

    App.Request.Query.ListSorter.SortField:
      description: Название колонки, по которой происходит сортировка
      name: sortField
      in: query
      required: false
      schema:
        type: string
      example: "caption"

    App.Request.Query.ListSorter.SortDirection:
      description: Направление сортировки
      name: sortDirection
      in: query
      required: false
      schema:
        description: |-
          Направление сортировки:
          - ASC - по возрастанию;
          - DESC - по убыванию;
        type: string
        enum:
          - ASC
          - DESC
        default: "ASC"
      example: "DESC"

    Custom.Request.Query.Filter.ElementDetailing:
      description: Список типов детализации через "," (см. Custom.Enum.FormElementDetailing)
      name: detailing
      in: query
      required: false
      schema:
        type: string
        default: "NORMAL"
      example: "NORMAL,EXTENDED"

    Controls.ElementTemplate.AdminAPI.Request.Path.TemplateID:
      description: Идентификатор шаблона элемента
      name: templateId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
      example: 1000

    Controls.SubmitForms.AdminAPI.Request.Path.FormID:
      description: Идентификатор формы
      name: formId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
      example: 1000

    Controls.SubmitForm.AdminAPI.Request.Query.FormID:
      description: Идентификатор формы
      name: formId
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
      example: 1000

    Controls.SubmitForm.AdminAPI.Request.Path.ElementID:
      description: Идентификатор поля формы
      name: elementId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
      example: 1000

  schemas:
    App.Enum.Status:
      description: |-
        Текущий статус записи:
        - DRAFT - черновик;
        - ENABLED - используется;
        - DISABLED - отключена;
      type: string
      enum:
        - DRAFT
        - ENABLED
        - DISABLED
      example: "ENABLED"

    App.Field.Caption:
      description: Название записи
      type: string
      maxLength: 128
      example: "Название"

    App.Field.DateTimeCreatedAt:
      description: Дата и время создания записи (UTC)
      type: string
      format: date-time
      example: "2023-01-01T12:00:00.000+02:00"

    App.Field.DateTimeUpdatedAt:
      description: Дата и время обновления записи (UTC)
      type: string
      format: date-time
      example: "2023-01-01T12:00:00.000+02:00"

    App.Field.ListPager.Total:
      description: Количество записей в БД с учётом указанных в запросе фильтров
      type: integer
      minimum: 0
      example: 584

    App.Field.TagVersion:
      description: Текущая версия записи
      type: integer
      minimum: 1
      example: 5

    App.Request.Model.ChangeStatus:
      description: |-
        DTO изменения статуса записи

        Возможные варианты переключений:
        - DRAFT -> ENABLED, DISABLED;
        - ENABLED -> DISABLED;
        - DISABLED -> ENABLED;
      type: object
      required:
        - version
        - status
      properties:
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        status:
          $ref: "#/components/schemas/App.Enum.Status"

    App.Request.Model.MoveItem:
      description: DTO перемещения записи в рамках списка
      type: object
      required:
        - afterId
      properties:
        afterId:
          description: |-
            Идентификатор записи, после которой необходимо вставить указанную запись.\
            При afterId = 0 запись вставляется в начало списка.
          type: integer
          example: 7

    App.Response.Model.ErrorList:
      description: DTO списка пользовательских ошибок 400
      type: array
      items:
        $ref: "#/components/schemas/App.Response.Model.ErrorAttribute"

    App.Response.Model.ErrorAttribute:
      description: DTO пользовательской ошибки 400
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым | Указано недопустимое значение атрибута"

    App.Response.Model.ErrorDetails: # RFC 7807 (Problem Details for HTTP APIs)
      description: DTO следующих ошибок - 401, 403, 404, 5XX
      type: object
      required:
        - title
        - details
        - request
        - time
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Resource not found"
        details:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Resource [User] with id = [123456] not found. You MUST use PUT to add a resource instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд (UTC)
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    App.Response.Model.SuccessCreatedItem:
      description: DTO результата создания записи
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор созданной записи
          type: string
          example: "f7479171-83d2-4f64-84ac-892f8c0aaf48"
        message:
          type: string
          example: "Запись была успешно создана"

    Custom.Enum.FormElementDetailing:
      description: |-
        Детализация данных формы/элемента формы:
        - NORMAL - пользовательская;
        - EXTENDED - расширенная (для менеджера, технолога);
      type: string
      enum:
        - NORMAL
        - EXTENDED
      example: "NORMAL"

    Custom.Enum.FormElementType:
      description: |-
        Тип элемента формы:
        - GROUP - элемент "группа" (контейнер элементов);
        - ELEMENT_LIST - список элементов;
      type: string
      enum:
        - GROUP
        - ELEMENT_LIST
      example: "ELEMENT_LIST"

    Custom.Field.Dictionaries.Controls.ElementID:
      description: Идентификатор элемента формы
      type: integer
      format: int32
      minimum: 1
      example: 2

    Custom.Field.Dictionaries.Controls.FormID:
      description: Идентификатор формы
      type: integer
      format: int32
      minimum: 1
      example: 2

    Custom.Field.Dictionaries.Controls.TemplateID:
      description: Идентификатор шаблона элемента формы (/v1/controls/element-templates)
      type: integer
      format: int32
      minimum: 1
      example: 2

    Custom.Field.ParamName:
      description: Уникальное имя формы/элемента формы
      type: string
      pattern: "^[a-zA-Z][a-zA-Z0-9]+$"
      minLength: 4
      maxLength: 32
      example: "ParamName"

    Controls.ElementTemplate.AdminAPI.Request.Model.CreateElementTemplate:
      description: DTO добавления нового шаблона элемента
      type: object
      required:
        - paramName
        - caption
        - elementType
        - elementDetailing
        - elementBody
      properties:
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Шаблон процесса печати"
        elementType:
          $ref: "#/components/schemas/Custom.Enum.FormElementType"
        elementDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"
        elementBody:
          description: Json объект шаблона соответсвущего спецификации
          type: string
          example: "{\"json\": \"object\"}"

    Controls.ElementTemplate.AdminAPI.Request.Model.StoreElementTemplate:
      description: DTO сохранения шаблона элемента
      type: object
      required:
        - version
      properties:
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Шаблон процесса печати"
        elementType:
          $ref: "#/components/schemas/Custom.Enum.FormElementType"
        elementDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"
        elementBody:
          description: Json объект шаблона соответсвущего спецификации
          type: string
          example: "{\"json\": \"object\"}"

    Controls.ElementTemplate.AdminAPI.Response.Model.ElementTemplateList:
      description: DTO - список шаблонов элементов
      type: object
      required:
        - items
        - total
      properties:
        items:
          description: Список записей ограниченный фильтром и pageSize
          type: array
          items:
            $ref: "#/components/schemas/Controls.ElementTemplate.AdminAPI.Response.Model.ElementTemplate"
        total:
          $ref: "#/components/schemas/App.Field.ListPager.Total"

    Controls.ElementTemplate.AdminAPI.Response.Model.ElementTemplate:
      description: |-
        DTO - шаблон элемента формы пользовательского интерфейса
        Спецификация https://printrobot.atlassian.net/wiki/spaces/prdsh/pages/54919268
      type: object
      properties:
        id: # templateId
          $ref: "#/components/schemas/Custom.Field.Dictionaries.Controls.TemplateID"
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        createdAt:
          $ref: "#/components/schemas/App.Field.DateTimeCreatedAt"
        updatedAt:
          $ref: "#/components/schemas/App.Field.DateTimeUpdatedAt"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Шаблон процесса печати"
        elementType:
          $ref: "#/components/schemas/Custom.Enum.FormElementType"
        elementDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"
        elementBody:
          description: Json объект шаблона соответсвущего спецификации
          type: string
          example: "{\"json\": \"object\"}"
        status:
          $ref: "#/components/schemas/App.Enum.Status"

    Controls.SubmitForms.AdminAPI.Request.Model.CreateForm:
      description: DTO добавления новой формы
      type: object
      required:
        - paramName
        - caption
        - formDetailing
      properties:
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Листовая продукция"
        formDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"

    Controls.SubmitForms.AdminAPI.Request.Model.StoreForm:
      description: DTO сохранения формы
      type: object
      required:
        - version
      properties:
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Листовая продукция"
        formDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"

    Controls.SubmitForms.AdminAPI.Response.Model.FormList:
      description: DTO - список форм
      type: object
      required:
        - items
        - total
      properties:
        items:
          description: Список записей ограниченный фильтром и pageSize
          type: array
          items:
            $ref: "#/components/schemas/Controls.SubmitForms.AdminAPI.Response.Model.Form"
        total:
          $ref: "#/components/schemas/App.Field.ListPager.Total"

    Controls.SubmitForms.AdminAPI.Response.Model.Form:
      description: |-
        DTO - форма пользовательского интерфейса
        Спецификация https://printrobot.atlassian.net/wiki/spaces/prdsh/pages/54919268
      type: object
      required:
        - id
        - version
        - createdAt
        - paramName
        - caption
        - formDetailing
        - formBody
        - status
      properties:
        id: # formId
          $ref: "#/components/schemas/Custom.Field.Dictionaries.Controls.FormID"
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        createdAt:
          $ref: "#/components/schemas/App.Field.DateTimeCreatedAt"
        updatedAt:
          $ref: "#/components/schemas/App.Field.DateTimeUpdatedAt"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Листовая продукция"
        formDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"
        formBody:
          description: Json объект формы соответсвущего спецификации
          type: string
          maxLength: 65536 # 64Kb
          example: "{\"json\": \"object\"}"
        status:
          $ref: "#/components/schemas/App.Enum.Status"

    Controls.SubmitForm.AdminAPI.Request.Model.CreateFormElement:
      description: DTO сохранения элемента формы
      type: object
      required:
        - templateId
      properties:
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Процесс печати"
        templateId:
          $ref: "#/components/schemas/Custom.Field.Dictionaries.Controls.TemplateID"
        elementRequired:
          description: Обязательность заполнения элемента в форме
          type: boolean
          example: true

    Controls.SubmitForm.AdminAPI.Request.Model.StoreFormElement:
      description: DTO сохранения элемента формы
      type: object
      required:
        - version
      properties:
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        formId:
          $ref: "#/components/schemas/Custom.Field.Dictionaries.Controls.FormID"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Процесс печати"
        elementRequired:
          description: Обязательность заполнения элемента в форме
          type: boolean
          example: true

    Controls.SubmitForm.AdminAPI.Response.Model.FormElementList:
      description: DTO - список элементов формы
      type: array
      items:
        $ref: "#/components/schemas/Controls.SubmitForm.AdminAPI.Response.Model.FormElement"

    Controls.SubmitForm.AdminAPI.Response.Model.FormElement:
      description: |-
        DTO - элемент формы пользовательского интерфейса
        Спецификация https://printrobot.atlassian.net/wiki/spaces/prdsh/pages/54919268
      type: object
      properties:
        id: # elementId
          $ref: "#/components/schemas/Custom.Field.Dictionaries.Controls.ElementID"
        version:
          $ref: "#/components/schemas/App.Field.TagVersion"
        createdAt:
          $ref: "#/components/schemas/App.Field.DateTimeCreatedAt"
        updatedAt:
          $ref: "#/components/schemas/App.Field.DateTimeUpdatedAt"
        paramName:
          $ref: "#/components/schemas/Custom.Field.ParamName"
        caption:
          allOf:
            - $ref: "#/components/schemas/App.Field.Caption"
            - example: "Процесс печати"
        elementType:
          $ref: "#/components/schemas/Custom.Enum.FormElementType"
        elementDetailing:
          $ref: "#/components/schemas/Custom.Enum.FormElementDetailing"
        elementRequired:
          description: Обязательность заполнения элемента
          type: boolean
          example: true
        elementBody:
          description: Json объект элемента формы
          type: string
          maxLength: 65536 # 64Kb
          example: "{\"json\": \"object\"}"

  responses:
    App.ResponseJson.Error400:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorList"

    App.ResponseJson.Error404:
      description: Запрашиваемый ресурс не был найден
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error5XX:
      description: Внутренняя ошибка сервера
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error401:
      description: Пользователь не был аутентифицирован
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error403:
      description: Пользователю с текущими правами доступ отклонён
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

  securitySchemes:
    bearerAuth:
      description: https://www.rfc-editor.org/rfc/rfc6750
      type: http
      scheme: bearer
      bearerFormat: JWT