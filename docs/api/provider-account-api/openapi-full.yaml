---
openapi: 3.0.3
info:
  version: 0.12.1
  title: Protected API print-shop
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Andrey Nazarov
  description: |-
    Protected REST API проекта print-shop

    ### Пользовательские ограничения полей и ошибки

    #### Ограничения полей
    - required - поле обязательно для заполнения;
    - omitempty - поле может быть не указано (не будет использоваться методом, в который было передано);
    - unique - уникальное значение поля;
    - min=N - поле должно быть не менее N символов;
    - max=N - поле должно быть не более N символов;
    - gte=N - числовое поле должно быть равно или более N;
    - lte=N - числовое поле должно быть равно или менее N;
    - enum - поле должно содержать одно из ENUM значений;
    - UUID - поле формата UUID;
    - pattern=P - поле должно соответствовать регулярному выражению P;

    #### Ошибки
    - ErrVersionInvalid - если передаваемая версия объекта не совпала с текущей версией объекта.\
      Как правило, это означает, что объект был ранее изменён другим процессом;
    - ErrSwitchStatusRejected - перевод в указанный статус объекта отклонён.\
      WorkFlow объекта запрещает переключение в указанный статус;
servers:
  - url: http://localhost:8080/pacc
    description: Local Host
tags:
  - name: System
    description: API System Methods

  - name: Account.CompanyPage
    description: Protected API. Company page of account

paths:
  /v1/health:
    get:
      summary: Метод получения ответа приложения
      description: Метод предназначен для проверки, что приложение запущено и отвечает
      operationId: getHealthResponse
      tags:
        - System

      responses:
        "200":
          description: Возвращён ответ приложения 200 OK
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/system-info:
    get:
      summary: Метод получения системной информации приложения
      description: Метод предназначен для получения системной информации о запущеном приложении
      operationId: getSystemInfo
      tags:
        - System

      responses:
        "200":
          description: Получена системная информация о приложении
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.System.Response.Model.SystemInfo"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/account/company-page:
    get:
      summary: Метод получения страницы компании
      description: Метод предназначен для получения информации о странице компании текущего аккаунта из БД
      operationId: getCompanyPage
      tags:
        - Account.CompanyPage

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      responses:
        "200":
          description: Получена информация о странице компании текущего аккаунта
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CompanyPage.ProviderAccountAPI.Response.Model.CompanyPage"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    put:
      summary: Метод сохранения страницы компании
      description: |-
        Метод предназначен для сохранения страницы компании текущего аккаунта в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: storeCompanyPage
      tags:
        - Account.CompanyPage

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/CompanyPage.ProviderAccountAPI.Request.Model.StoreCompanyPage"

      responses:
        "204":
          description: Информация о страницы компании текущего аккаунта успешно сохранена
        "400":
          # Заголовок записи не может быть пустым
          # Заголовок записи не может быть более 128 символов
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/account/company-page/status:
    put:
      summary: Метод изменения статуса публикации страницы компании
      description: |-
        Метод предназначен для изменения статуса публикации страницы компании текущего аккаунта в БД

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: changeCompanyPageStatus
      tags:
        - Account.CompanyPage

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/CompanyPage.ProviderAccountAPI.Request.Model.ChangePageStatus"

      responses:
        "204":
          description: Статус публикации страницы компании текущего аккаунта успешно изменён
        "400":
          # Указанный статус содержит недопустимое значение
          # В данный статус переключение невозможно
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "403":
          $ref: "#/components/responses/App.ResponseJson.Error403"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/account/company-page/logo:
    put:
      summary: Метод сохранения логотипа компании
      description: |-
        Метод предназначен для загрузки и сохранения нового логотипа компании на её страницу для текущего аккаунта в файловое хранилище

        **Ограничения и ошибки полей:**
        - Caption: required,max=64

      operationId: uploadCompanyPageLogo
      tags:
        - Account.CompanyPage

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                companyLogo:
                  description: Бинарный файл с расширением JPEG, PNG
                  type:  string
                  format: binary
                  maxLength: 262144 # 256Kb

      responses:
        "204":
          description: Логотип компании текущего аккаунта был сохранён
        "400":
          # Загруженный логотип некорректен (битый файл, расширение, ...)
          $ref: "#/components/responses/App.ResponseJson.Error400"
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

    delete:
      summary: Метод удаления логотипа компании
      description: Метод предназначен для удаления логотипа компании текущего аккаунта из БД
      operationId: removeCompanyPageLogo
      tags:
        - Account.CompanyPage

      security:
        - bearerAuth: []

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

      responses:
        "204":
          description: Логотип компании текущего пользователя успешно удалён
        "401":
          $ref: "#/components/responses/App.ResponseJson.Error401"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

components:

  parameters:
    App.Request.Header.AcceptLanguage:
      description: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language
      name: Accept-Language
      in: header
      required: false
      schema:
        type: string
        default: "ru-RU"
      example: "ru;q=0.9, fr-CH, fr;q=0.8, en;q=0.7, *;q=0.5"

    App.Request.Header.CorrelationID:
      description: Уникальный идентификатор клиента
      name: X-Correlation-Id
      in: header
      required: false
      schema:
        type: string
        format: uuid
      example: "1f0b7925-cee6-4e44-8ea3-4e585d12212d"

  schemas:
    App.Field.DateTimeUpdatedAt:
      description: Дата и время обновления записи (UTC)
      type: string
      format: date-time
      example: "2023-01-01T12:00:00.000+02:00"

    App.Response.Model.ErrorList:
      description: DTO списка пользовательских ошибок 400
      type: array
      items:
        $ref: "#/components/schemas/App.Response.Model.ErrorAttribute"

    App.Response.Model.ErrorAttribute:
      description: DTO пользовательской ошибки 400
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым | Указано недопустимое значение атрибута"

    App.Response.Model.ErrorDetails: # RFC 7807 (Problem Details for HTTP APIs)
      description: DTO следующих ошибок - 401, 403, 404, 5XX
      type: object
      required:
        - title
        - details
        - request
        - time
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Resource not found"
        details:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Resource [User] with id = [123456] not found. You MUST use PUT to add a resource instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд (UTC)
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    Custom.Enum.CompanyPublicStatus:
      description: |-
        Текущий статус публикации данных компании:
        - HIDDEN - скрыта;
        - PUBLISHED - опубликована страница компании;
        - PUBLISHED_SHARED - опубликована страница компании и ссылки на неё;
      type: string
      enum:
        - HIDDEN
        - PUBLISHED
        - PUBLISHED_SHARED
      example: "PUBLISHED"

    App.System.Response.Model.SystemInfo:
      description: DTO - системная информация о запущеном приложении
      type: object
      required:
        - name
        - tagVersion
        - hostName
        - isDebug
        - logLevel
        - startedAt
      properties:
        name:
          description: Название приложения
          type: string
          maxLength: 64
          example: "Sample App"
        version:
          description: Версия приложения
          type: string
          maxLength: 16
          example: "v0.1.0"
        hostName:
          description: Название хоста, на котором запущено приложение
          type: string
          maxLength: 64
          example: "host-name"
        isDebug:
          description: Статус режима отладки
          type: boolean
          example: true
        logLevel:
          type: string
          enum:
            - DEBUG
            - INFO
            - WARN
            - ERROR
            - FATAL
            - TRACE
          example: "ERROR"
        startedAt:
          description: Время запуска приложения (UTC)
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"

    CompanyPage.ProviderAccountAPI.Request.Model.StoreCompanyPage:
      description: DTO - сохранение публичной страницы компании
      type: object
      properties:
        rewriteName:
          description: Уникальное название страницы
          type: string
          maxLength: 64
          example: "company-name"
        pageHead:
          description: Заголовок страницы компании
          type: string
          maxLength: 128
          example: "Компания 0001"
        siteUrl:
          description: URL страницы сайта компании
          type: string
          maxLength: 256
          example: "https://site.localhost/"

    CompanyPage.ProviderAccountAPI.Request.Model.ChangePageStatus:
      description: DTO - изменения статуса публикации страницы компании
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Custom.Enum.CompanyPublicStatus"

    CompanyPage.ProviderAccountAPI.Response.Model.CompanyPage:
      description: DTO - публичная страница компании
      type: object
      properties:
        updatedAt:
          $ref: "#/components/schemas/App.Field.DateTimeUpdatedAt"
        rewriteName:
          description: Уникальное название страницы
          type: string
          maxLength: 64
          example: "company-name"
        pageHead:
          description: Заголовок страницы компании
          type: string
          maxLength: 128
          example: "Компания 0001"
        logoPath:
          description: URL логотипа компании
          type: string
          maxLength: 128
          example: "https://localhost/company-logo.png"
        siteUrl:
          description: URL страницы сайта компании
          type: string
          maxLength: 256
          example: "https://site.localhost/"
        status:
          $ref: "#/components/schemas/Custom.Enum.CompanyPublicStatus"

  responses:
    App.ResponseJson.Error400:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorList"

    App.ResponseJson.Error404:
      description: Запрашиваемый ресурс не был найден
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error5XX:
      description: Внутренняя ошибка сервера
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error401:
      description: Пользователь не был аутентифицирован
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

    App.ResponseJson.Error403:
      description: Пользователю с текущими правами доступ отклонён
      content:
        application/problem+json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Response.Model.ErrorDetails"

  securitySchemes:
    bearerAuth:
      description: https://www.rfc-editor.org/rfc/rfc6750
      type: http
      scheme: bearer
      bearerFormat: JWT